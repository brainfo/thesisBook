[["index.html", "snRNA-seq data analysis Chapter 1 Preface 1.1 Comments on snRNA-seq vs scRNA-seq", " snRNA-seq data analysis Hong Jiang 2022-11-12 Chapter 1 Preface This is a minimal benchmark for analyzing snRNA-seq data, especially with scverse and bioconductor communities. It will be continuously updated throughout my PhD years. From my current experience: bioconductor has more solid basement of biological (annotation) data questions and methods to tackle them (except for dl) are usually first developed in R, then the python community would propose competing methods. Since seruat comes earlier than scanpy the scanpy community evolves fast but somehow the developers are not considering better integrating each other’s new features packages in R is in general easier to use, though I personally is more used to python and could adapt more myself R utils are too easily to crash with the same hardware facility, same data size and same kind of job 1.1 Comments on snRNA-seq vs scRNA-seq advantages of snRNA-seq: does not require the preservation of cellular integrity during sample preparation, especially dissociation. disadvantages of snRNA-seq: loss of biological signal for genes with little nuclear localization. Interpretation of DE results: assumption: nuclear abundances are a good proxy for the overall expression profile. considerations: transcripts for strongly expressed genes might localize to the cytoplasm for efficient translation and subsequently be lost upon stripping. genes with the same overall expression but differences in the rate of nuclear export may appear to be differentially expressed between clusters. In the most pathological case, higher snRNA-seq abundances may indicate nuclear sequestration of transcripts for protein-coding genes and reduced activity of the relevant biological process, contrary to the usual interpretation of the effect of upregulation. "],["preprocess.html", "Chapter 2 Preprocess 2.1 Empty droplets 2.2 Ambient contamination", " Chapter 2 Preprocess In this chapter, we deal with empty droplets, ambient RNAs and doublets, especially in snRNA-seq setting. 2.1 Empty droplets We have no prior knowledge about whether a particular library (i.e., cell barcode) corresponds to cell-containing or empty droplets. Thus, we need to call cells from empty droplets based on the observed expression profiles. This is not entirely straightforward as empty droplets can contain ambient (i.e., extracellular) RNA that can be captured and sequenced, resulting in non-zero counts for libraries that do not contain any cell. The aim of empty droplets detection in most cases is to retains nucleus that would have been discarded by other threshold on total counts. Therefore, could use looser thresholds after this step. 2.1.1 Statistical Modeling Cell Ranger v3.0 and DropletUtils implemented utils to distinguish empty droplets. The algorithm has three key steps: filter out genes with counts of zero for all barcodes estimate the profile of the ambient RNA pool (as gene count across barcodes with total counts &lt; 100 in DropletUtils or estimate expected number of recovered cells by OrdMag alg. in Cellranger) test each barcode for deviations from this profile using a Dirichlet-multinomial model of UMI count sampling Barcodes with significant deviations are considered to be genuine cells Use a knee point filter to ensure that barcodes with large total counts are always retained Cellranger uses an expected-cells and DropUtils uses by.rank as initial “cells”. But with the sample initial top number of cells, two implementations give slightly different retained cells. And I don’t get why this happens. In cellranger 7.0, it estimates expected number of recovered cells by OrdMag alg. But I didn’t get to use this method. Cellranger doesn’t explicitly tell what FDR cutoff it uses. But retained number of nucleus fell into the range between 0.001 to 0.05 of DropUtils. DropUtils uses barcodes with total counts &lt; 100 as initial empty drops, but this failed with the tested datasets, evident (e.g.) as in FDR distribution: 2.1.2 Deep Learning Cellbender provides a deep generative model of background-contaminated counts. The model is used for learning the background RNA profile, distinguishing cell-containing droplets from empty ones, and retrieving background-free gene expression profiles. The model schema and network representation can be found in Figure 1g,h This method has been benchmarked with UMI counts threshold and DecontX but not DropletUtils 2.1.3 Could Cellbender retain more good nucleus? YES I summarized the general stats from the above mentioned methods with three in-house 10x snRNA-seq data: Thresholds filtering is necessary and the most useful data clean method. It doesn’t matter whether by detecting outliers or just setting hard cut-offs. 2.2 Ambient contamination I tested the combinations of the aforementioned empty droplets and ambient RNA detection methods (See diagram) with our in-house data and I’m convinced that Cellbender and cluster-based methods are of advantage. In snRNA-seq, mtRNAs are natural controllers for ambient RNAs and thus can be leveraged in benchmarking. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
